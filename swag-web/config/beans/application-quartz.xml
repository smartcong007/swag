<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

  <!-- quartz持久化存储  -->
  <!--实现动态配置只需定义一下schedulerbean就可以了-->

  <bean id="quartzDatasource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
    <property name="driverClassName" value="${jdbc.driver}"/>
    <property name="url" value="${quartz.jdbc.url}"/>
    <property name="username" value="${quartz.jdbc.username}"/>
    <property name="password" value="${quartz.jdbc.password}"/>
    <property name="maxActive" value="20"/>
    <property name="minIdle" value="2"/>
    <property name="initialSize" value="2"/>
    <property name="validationQuery" value="SELECT 1"/>
    <property name="testOnBorrow" value="false"/>
    <property name="testOnReturn" value="false"/>
    <property name="testWhileIdle" value="true"/>
    <property name="timeBetweenEvictionRunsMillis" value="60000"/>
    <property name="minEvictableIdleTimeMillis" value="300000"/>
    <property name="defaultAutoCommit" value="true"/>
    <property name="removeAbandoned" value="true"/>
    <property name="removeAbandonedTimeout" value="60"/>
    <property name="logAbandoned" value="true"/>
    <property name="filters" value="stat"/>
  </bean>

  <bean name="schedulerFactoryBean"
    class="org.springframework.scheduling.quartz.SchedulerFactoryBean" lazy-init="false">
    <property name="dataSource">
      <ref bean="quartzDatasource"/>
    </property>
    <property name="applicationContextSchedulerContextKey" value="applicationContext"/>
    <property name="quartzProperties">
      <props>
        <prop key="org.quartz.scheduler.instanceName">swagClusteredScheduler</prop>
        <prop key="org.quartz.scheduler.instanceId">AUTO</prop>
        <!-- 线程池配置 -->
        <prop key="org.quartz.threadPool.class">${org.quartz.threadPool.class}</prop>
        <prop key="org.quartz.threadPool.threadCount">${org.quartz.threadPool.threadCount}</prop>
        <prop key="org.quartz.threadPool.threadPriority">${org.quartz.threadPool.threadPriority}</prop>
        <prop key="org.quartz.jobStore.misfireThreshold">${org.quartz.jobStore.misfireThreshold}</prop>

        <!-- JobStore 配置 -->
        <prop key="org.quartz.jobStore.class">${org.quartz.jobStore.class}</prop>
        <!-- 集群配置 -->
        <prop key="org.quartz.jobStore.isClustered">true</prop>
        <prop key="org.quartz.jobStore.clusterCheckinInterval">15000</prop>
        <!-- 数据表设置 -->
        <prop key="org.quartz.jobStore.tablePrefix">${org.quartz.jobStore.tablePrefix}</prop>
<!--        <prop key="org.quartz.jobStore.dataSource">${org.quartz.jobStore.dataSource}</prop>-->
      </props>
    </property>
  </bean>
</beans>